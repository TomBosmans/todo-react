{"version":3,"sources":["reducers/todo.js","reducers/index.js","reducers/todos.js","configureStore.js","layouts/App.js","constants/index.js","api/index.js","components/IconButton.js","components/ToggleableMenu.js","containers/TodoEditForm.js","actions/index.js","containers/TodoListItem.js","hooks/index.js","containers/TodoList.js","selectors/index.js","containers/TodoFilterButton.js","containers/TodoFilter.js","containers/TodoNewForm.js","routes/TodoListRoute.js","index.js","Root.js"],"names":["state","action","type","id","payload","todoApp","combineReducers","todos","data","isFetching","error","map","item","todo","filter","configureStore","createStore","rootReducer","applyMiddleware","promiseMiddleware","thunkMiddleware","children","Container","maxWidth","VisibilityFilters","fakeDatabase","v4","text","completed","delay","ms","Promise","resolve","setTimeout","getTodos","then","Error","postTodo","find","patchTodo","deleteTodo","AddButton","IconButton","options","color","size","Icon","SaveButton","MoreButton","useState","anchorEl","setAnchorEl","onClick","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","SubmitButton","InputAdornment","position","afterUpdate","dispatch","useDispatch","input","setInput","inputEl","useRef","useEffect","current","focus","onSubmit","preventDefault","promise","api","updateTodo","TextField","label","value","fullWidth","inputRef","InputProps","endAdornment","onInput","e","target","isEditing","setIsEditing","disableEditing","ClickAwayListener","onClickAway","style","paddingLeft","paddingRight","ListItem","button","toggleTodo","disableRipple","ListItemIcon","Checkbox","edge","checked","ListItemText","primary","ListItemSecondaryAction","ToggleableMenu","MenuItem","destroyTodo","useQuery","query","URLSearchParams","useLocation","search","get","useSelector","selectTodos","Grid","container","direction","justify","CircularProgress","List","dense","TodoListItem","key","active","activeFilter","Button","component","NavLink","to","disabled","alignItems","trim","margin","path","Paper","marginBottom","textAlign","render","store","TodoListRoute","document","getElementById"],"mappings":"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","file":"static/js/main.2402e52f.chunk.js","sourcesContent":["export default (state, action) => {\n  switch(action.type) {\n  case 'TOGGLE_TODO_FULFILLED':\n  case 'UPDATE_TODO_FULFILLED':\n  case 'TOGGLE_TODO_PENDING':\n  case 'UPDATE_TODO_PENDING':\n    if (state.id !== action.payload.id) { return state; }\n    return { ...state, ...action.payload };\n  default:\n    return state;\n  }  \n};\n","import { combineReducers } from 'redux';\nimport todos from './todos';\n\nconst todoApp = combineReducers({\n  todos\n});\n\nexport default todoApp;\n","import todo from './todo';\n\nexport default (state = { data: [], isFetching: true }, action) => {\n  switch(action.type) {\n  case 'GET_TODOS_PENDING':\n    return { ...state, isFetching: true };\n  case 'GET_TODOS_FULFILLED':\n    return { ...state, data: action.payload, isFetching: false };\n  case 'GET_TODOS_REJECTED':\n    return { ...state, isFetching: false, error: action.payload };\n  case 'TOGGLE_TODO_FULFILLED':\n  case 'UPDATE_TODO_FULFILLED':\n  case 'TOGGLE_TODO_PENDING':\n  case 'UPDATE_TODO_PENDING':\n    return { ...state, data: state.data.map(item => todo(item, action))  }\n  case 'CREATE_TODO_FULFILLED':\n    return { ...state, data: [...state.data, action.payload] }\n  case 'DESTROY_TODO_PENDING':\n    return { ...state, data: state.data.filter(todo => todo.id !== action.payload.id) }\n  default:\n    return state;\n  }\n}\n","import rootReducer from './reducers';\n\nimport loggerMiddleware from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport promiseMiddleware from 'redux-promise-middleware';\n\nimport { createStore, applyMiddleware } from 'redux';\n\nconst buildMiddlewares = () => {\n  const middlewares = [promiseMiddleware, thunkMiddleware];\n  if (process.env.NODE_ENV !== 'production') {\n    middlewares.push(loggerMiddleware);\n  }\n\n  return middlewares;\n};\n\nconst configureStore = () => {\n  const store = createStore(\n    rootReducer,\n    applyMiddleware(...buildMiddlewares())\n  );\n  \n  return store;\n};\n\nexport default configureStore;\n","import React from 'react';\nimport Container from '../components/Container';\n\nexport default ({ children }) => (\n  <Container maxWidth='sm'>\n    {children}\n  </Container>\n);\n","export const VisibilityFilters = {\n  SHOW_ALL: 'all',\n  SHOW_COMPLETED: 'completed',\n  SHOW_ACTIVE: 'active'\n}\n","import v4 from 'node-uuid';\nimport { VisibilityFilters } from '../constants';\n\nconst fakeDatabase = {\n  todos: [{\n      id: v4(),\n      text: 'hey',\n      completed: true\n    }, {\n      id: v4(),\n      text: 'ho',\n      completed: false\n    }, {\n      id: v4(),\n      text: \"let's go\",\n      completed: false\n    }]\n};\n\nconst delay = (ms) =>\n  new Promise(resolve => setTimeout(resolve, ms));\n\nexport const getTodos = (filter) =>\n  delay(500).then(() => {\n    switch(filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return fakeDatabase.todos;\n    case VisibilityFilters.SHOW_ACTIVE:\n      return fakeDatabase.todos.filter(todo => !todo.completed);\n    case VisibilityFilters.SHOW_COMPLETED:\n      return fakeDatabase.todos.filter(todo => todo.completed);\n    default:\n      throw new Error(`unknown filter ${filter}`);\n    }\n  });\n\nexport const getTodo = (id) =>\n  delay(500).then(() => {\n    return fakeDatabase.todos.find(todo => todo.id === id);\n  });\n\nexport const postTodo = (data) =>\n  delay(500).then(() => {\n    const id = v4();\n    fakeDatabase.todos = [...fakeDatabase.todos, {...data, id: id }];\n    return fakeDatabase.todos.find(todo => todo.id === id);\n  });\n\nexport const patchTodo = (id, data) =>\n  delay(500).then(() => {\n    fakeDatabase.todos = fakeDatabase.todos.map(todo => {\n      if (todo.id !== id) { return todo; };\n      return { ...todo, ...data };\n    });\n\n    return fakeDatabase.todos.find(todo => todo.id === id);\n  });\n\nexport const deleteTodo = (id) =>\n  delay(500).then(() => {\n    fakeDatabase.todos = fakeDatabase.todos.filter(todo => todo.id !== id)\n    return 'success'\n  });\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from './Icon';\n\nexport default IconButton;\n\nexport const AddButton = ({children, ...options}) => (\n  <IconButton {...options} color='primary' size='small'>\n    <Icon>add_circle</Icon>\n  </IconButton>\n);\n\nexport const SaveButton = ({children, ...options}) => (\n  <IconButton {...options} color='primary' size='small'>\n    <Icon>save</Icon>\n  </IconButton>\n);\n\nexport const DeleteButton = ({children, ...options}) => (\n  <IconButton {...options} size='small'>\n    <Icon>delete</Icon>\n  </IconButton>\n);\n\nexport const MoreButton = ({children, ...options}) => (\n  <IconButton {...options} size='small'>\n    <Icon>more_horiz</Icon>\n  </IconButton>\n);\n","import React, { Fragment, useState } from 'react';\nimport Menu from './Menu';\nimport { MoreButton } from './IconButton';\n\nexport default ({ children }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const openMenu = (event) => setAnchorEl(event.currentTarget);\n  const closeMenu = () => setAnchorEl(null);\n\n  return (\n    <Fragment>\n      <MoreButton onClick={openMenu} />\n      <Menu anchorEl={anchorEl}\n\t    keepMounted\n\t    open={Boolean(anchorEl)}\n\t    onClose={closeMenu}>\n\t{ children }\n      </Menu>\n    </Fragment>\n  );\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateTodo } from '../actions';\nimport TextField from '../components/TextField';\nimport InputAdornment from '../components/InputAdornment';\nimport { SaveButton } from '../components/IconButton';\n\nconst SubmitButton = () => (\n  <InputAdornment position=\"start\">\n    <SaveButton type=\"submit\"/>\n  </InputAdornment>\n);\n\nexport default ({ todo, afterUpdate }) => {\n  const { id, text } = todo;\n  const dispatch = useDispatch();\n  const [input, setInput] = useState(text);\n  const inputEl = useRef();\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    dispatch(updateTodo(id, { text: input }));\n    afterUpdate();\n  };\n\n  useEffect(() => inputEl.current.focus(), []);\n\n  return (\n    <form onSubmit={onSubmit}>\n      <TextField id={id}\n\t         label=\"Text\" value={input} fullWidth\n\t\t inputRef={inputEl}\n\t\t InputProps={{ endAdornment: <SubmitButton/>}}\n\t\t onInput={e => setInput(e.target.value)}/>\n    </form>\n  );\n}\n","import * as api from '../api';\n\nexport const getTodos = (filter) => ({\n  type: 'GET_TODOS',\n  payload: api.getTodos(filter),\n});\n\nexport const getTodo = (id) => ({\n  type: 'GET_TODO',\n  payload: api.getTodo(id),\n});\n\nexport const createTodo = (data) => ({\n  type: 'CREATE_TODO',\n  payload: api.postTodo(data),\n});\n\nexport const updateTodo = (id, data) => ({\n  type: 'UPDATE_TODO',\n  payload: {\n    promise: api.patchTodo(id, data),\n    data: { id: id, ...data },\n  }\n});\n\nexport const destroyTodo = (id) => ({\n  type: 'DESTROY_TODO',\n  payload: {\n    promise: api.deleteTodo(id),\n    data: { id: id },\n  }\n});\n\nexport const toggleTodo = (todo) => ({\n  type: 'TOGGLE_TODO',\n  payload: {\n    promise: api.patchTodo(todo.id, { completed: !todo.completed }),\n    data: {...todo, completed: !todo.completed }\n  }\n});\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { toggleTodo, destroyTodo } from '../actions';\n\nimport ListItem from '../components/ListItem';\nimport ListItemText from '../components/ListItemText';\nimport ListItemIcon from '../components/ListItemIcon';\nimport ListItemSecondaryAction from '../components/ListItemSecondaryAction';\nimport Checkbox from '../components/Checkbox';\nimport ToggleableMenu from '../components/ToggleableMenu';\nimport MenuItem from '../components/MenuItem';\nimport ClickAwayListener from '../components/ClickAwayListener';\n\nimport EditForm from './TodoEditForm';\n\nexport default ({ todo }) => {\n  const { id, text, completed } = todo;\n  const dispatch = useDispatch();\n  const [isEditing, setIsEditing] = useState(false);\n\n  const enableEditing =() => setIsEditing(true);\n  const disableEditing = () => setIsEditing(false);\n  const destroy = () => dispatch(destroyTodo(id));\n  const toggle = () => {\n    if (!isEditing) dispatch(toggleTodo(todo));\n  };\n\n  if (isEditing) return (\n    <ClickAwayListener onClickAway={disableEditing}>\n      <div style={{ paddingLeft: '16px', paddingRight: '16px' }}>\n\t<EditForm todo={todo} afterUpdate={disableEditing}/>\n      </div>\n    </ClickAwayListener>\n  );\n\n  return (\n    <ListItem button onClick={toggle} disableRipple={isEditing}>\n      <ListItemIcon>\n        <Checkbox edge=\"start\" checked={completed} disableRipple/>\n      </ListItemIcon>\n      <ListItemText primary={text}/>\n      <ListItemSecondaryAction>\n\t<ToggleableMenu>\n\t  <MenuItem onClick={enableEditing}>Edit</MenuItem>\n\t  <MenuItem onClick={destroy}>Delete</MenuItem>\n\t</ToggleableMenu>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n","import {  useLocation } from \"react-router-dom\";\n\nexport const useQuery = (query) => (\n  new URLSearchParams(useLocation().search).get(query)\n);\n","import React, { useEffect } from 'react';\nimport TodoListItem from './TodoListItem';\nimport List from '../components/List';\nimport { getTodos } from '../actions';\nimport { useQuery } from \"../hooks\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectTodos } from '../selectors';\nimport CircularProgress from '../components/CircularProgress';\nimport Grid from '../components/Grid';\n\nexport default () => {\n  const todos = useSelector(state => selectTodos(state));\n  const isFetching = useSelector(state => state.todos.isFetching);\n  const dispatch = useDispatch();\n  const filter = useQuery('filter');\n\n  useEffect(()=>{\n    dispatch(getTodos(filter || 'all'));\n  }, [filter, dispatch]);\n\n  if (isFetching) return (\n    <Grid container direction=\"row\" justify=\"space-around\">\n      <CircularProgress />\n    </Grid>\n  );\n\n  return(\n    <List dense>\n      { todos.map(todo => (<TodoListItem key={todo.id} todo={todo} />)) }\n    </List>\n  );\n}\n","export const selectTodos = (state) =>\n    state.todos.data;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Button from '../components/Button';\nimport { VisibilityFilters } from '../constants';\nimport { useQuery } from \"../hooks\";\n\nexport default ({ filter, active, children }) => {\n  const activeFilter = useQuery('filter') || VisibilityFilters.SHOW_ALL;\n\n  return (\n    <Button component={NavLink}\n\t    to={`list?filter=${filter}`}\n\t    disabled={filter === activeFilter}>\n      {children}\n    </Button>\n  );\n};\n","import React from 'react';\nimport { VisibilityFilters } from '../constants';\nimport FilterButton from './TodoFilterButton';\nimport Grid from '../components/Grid';\n\nexport default () => (\n  <Grid container direction=\"row\" justify=\"space-around\" alignItems=\"baseline\">\n    <FilterButton filter={VisibilityFilters.SHOW_ALL}>All</FilterButton>\n    <FilterButton filter={VisibilityFilters.SHOW_ACTIVE}>Active</FilterButton>\n    <FilterButton filter={VisibilityFilters.SHOW_COMPLETED}>Completed</FilterButton>\n  </Grid>\n);\n","import React, { useState } from 'react';\nimport { createTodo } from '../actions';\nimport { useDispatch } from 'react-redux';\nimport TextField from '../components/TextField';\nimport InputAdornment from '../components/InputAdornment';\nimport { AddButton } from '../components/IconButton';\n\nconst SubmitButton = () => (\n  <InputAdornment position=\"start\">\n    <AddButton type=\"submit\"/>\n  </InputAdornment>\n);\n\nexport default () => {\n  const dispatch = useDispatch();\n  const [input, setInput] = useState('');\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    if (!input.trim()) return;\n\n    dispatch(createTodo({ text: input, completed: false }));\n    setInput('');\n  };\n  \n  return (\n    <form onSubmit={onSubmit} style={{margin: '10px'}}>\n      <TextField label=\"New Todo\" value={input} fullWidth\n\t\t InputProps={{ endAdornment: <SubmitButton/>}}\n\t\t onInput={e => setInput(e.target.value)}/>\n    </form>\n  );\n}\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport Layout from '../layouts/App';\nimport Paper from '../components/Paper';\nimport List from '../containers/TodoList';\nimport Filter from '../containers/TodoFilter';\nimport NewForm from '../containers/TodoNewForm';\n\nexport default () => (\n  <Route path='/list'>\n    <Layout>\n      <Paper style={{marginBottom: '20px', textAlign: 'center'}}>\n\t<Filter />\n      </Paper>\n      <Paper>\n\t<NewForm />\n\t<List />\n      </Paper>\n    </Layout>\n  </Route>\n)\n","import React from 'react';\nimport { render } from 'react-dom';\nimport configureStore from './configureStore';\nimport Root from './Root';\n\nrender(\n  <Root store={configureStore()} />,\n  document.getElementById('root')\n);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport TodoListRoute from './routes/TodoListRoute';\n\nexport default ({ store }) => (\n  <Provider store={store}>\n    <Router>\n      <TodoListRoute />\n    </Router>\n  </Provider>\n)\n"],"sourceRoot":""}